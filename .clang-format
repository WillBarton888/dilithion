# Dilithion C++ Code Formatting Configuration
# Based on Bitcoin Core coding style with Dilithion-specific adjustments

BasedOnStyle: Google

# Indentation
IndentWidth: 4
TabWidth: 4
UseTab: Never
ContinuationIndentWidth: 4

# Line length
ColumnLimit: 100

# Alignment
AlignAfterOpenBracket: DontAlign
AlignConsecutiveAssignments: false
AlignConsecutiveDeclarations: false
AlignEscapedNewlines: Left
AlignOperands: false
AlignTrailingComments: false

# Braces
BreakBeforeBraces: Custom
BraceWrapping:
  AfterClass: true
  AfterControlStatement: false
  AfterEnum: false
  AfterFunction: true
  AfterNamespace: false
  AfterStruct: true
  AfterUnion: false
  BeforeCatch: false
  BeforeElse: false

# Spacing
SpaceAfterCStyleCast: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeParens: ControlStatements
SpaceInEmptyParentheses: false
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInContainerLiterals: false
SpacesInParentheses: false
SpacesInSquareBrackets: false

# Pointers and references
DerivePointerAlignment: false
PointerAlignment: Left

# Functions
AllowShortFunctionsOnASingleLine: None
AlwaysBreakAfterReturnType: None
AllowAllParametersOfDeclarationOnNextLine: true
BinPackArguments: true
BinPackParameters: true

# Control statements
AllowShortBlocksOnASingleLine: false
AllowShortCaseLabelsOnASingleLine: false
AllowShortIfStatementsOnASingleLine: Never
AllowShortLoopsOnASingleLine: false

# Include sorting
SortIncludes: true
IncludeBlocks: Preserve

# Comments
ReflowComments: true

# Namespace
CompactNamespaces: false
FixNamespaceComments: true

# Others
KeepEmptyLinesAtTheStartOfBlocks: false
MaxEmptyLinesToKeep: 1
