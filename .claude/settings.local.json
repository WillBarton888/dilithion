{
  "permissions": {
    "allow": [
      "Bash(git merge standalone-implementation -m \"$(cat <<''EOF''\nMerge standalone-implementation: Week 2 Public Launch Ready\n\nMerging complete standalone implementation with honest disclosure\nand comprehensive documentation for public launch.\n\nThis brings main branch up to date with:\n- 100% complete standalone implementation (NOT Bitcoin Core fork)\n- AI-assisted development full disclosure\n- Experimental status warnings\n- Complete educational resources\n- Security review documentation\n- Week 2 launch planning\n\nReady for public community review.\n\nðŸ¤– Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git merge:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git checkout:*)",
      "Bash(pandoc:*)",
      "Bash(where:*)",
      "Bash(if [ -f \"/c/Program Files/Google/Chrome/Application/chrome.exe\" ])",
      "Bash(then \"/c/Program Files/Google/Chrome/Application/chrome.exe\" --headless --disable-gpu --print-to-pdf=\"C:\\Users\\will\\dilithion\\Dilithion-Whitepaper-v1.0.pdf\" \"C:\\Users\\will\\dilithion\\WHITEPAPER.html\")",
      "Bash(elif [ -f \"/c/Program Files (x86)/Microsoft/Edge/Application/msedge.exe\" ])",
      "Bash(then \"/c/Program Files (x86)/Microsoft/Edge/Application/msedge.exe\" --headless --disable-gpu --print-to-pdf=\"C:\\Users\\will\\dilithion\\Dilithion-Whitepaper-v1.0.pdf\" \"C:\\Users\\will\\dilithion\\WHITEPAPER.html\")",
      "Bash(else echo \"Neither Chrome nor Edge found\")",
      "Bash(fi)",
      "Bash(make:*)",
      "Bash(./dilithion-node:*)",
      "WebSearch",
      "Bash(g++:*)",
      "Bash(gcc:*)",
      "Bash(clang++:*)",
      "Bash(cl.exe)",
      "Bash(wsl --list:*)",
      "Bash(wsl g++:*)",
      "Bash(wsl make:*)",
      "Bash(ls:*)",
      "Read(//c/mnt/c/Users/will/**)",
      "Bash(wsl.exe -- g++:*)",
      "Bash(dpkg:*)",
      "Bash(wsl.exe -- dpkg:*)",
      "Bash(wsl.exe -- cmake --version:*)",
      "Bash(awk:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(wsl bash:*)",
      "Bash(curl:*)",
      "Bash(wsl -- bash:*)"
    ],
    "deny": [],
    "ask": []
  }
}
